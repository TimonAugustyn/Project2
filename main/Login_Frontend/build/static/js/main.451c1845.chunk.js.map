{"version":3,"sources":["service/AuthService.js","Home.js","Register.js","Login.js","routes/PublicRoute.js","routes/PrivateRoute.js","Profile.js","App.js","index.js"],"names":["module","exports","getUser","user","sessionStorage","getItem","JSON","parse","getToken","setUserSession","token","setItem","stringify","resetUserSession","removeItem","Home","Register","useState","name","setName","email","setEmail","username","setUsername","password","setPassword","message","setMessage","onSubmit","event","preventDefault","trim","requestBody","axios","post","headers","then","response","catch","error","status","data","type","value","onChange","target","className","Login","props","errorMessage","setErrorMessage","history","push","PublicRoute","Component","component","rest","render","to","pathname","PrivateRoute","postImage","a","image","description","formData","FormData","append","result","Profile","file","setFile","setDescription","images","setImages","submit","files","accept","e","map","src","onClick","App","isAuthenicating","setAuthenicating","useEffect","undefined","exact","activeClassName","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"0GAAAA,EAAOC,QAAU,CACbC,QAAS,WACP,IAAMC,EAAOC,eAAeC,QAAQ,QACpC,MAAa,cAATF,GAAyBA,EAGpBG,KAAKC,MAAMJ,GAFX,MAMXK,SAAU,WACR,OAAOJ,eAAeC,QAAQ,UAGhCI,eAAgB,SAASN,EAAMO,GAC7BN,eAAeO,QAAQ,OAAQL,KAAKM,UAAUT,IAC9CC,eAAeO,QAAQ,QAASD,IAGlCG,iBAAkB,WAChBT,eAAeU,WAAW,QAC1BV,eAAeU,WAAW,Y,iHCLjBC,EAdF,WACX,OACE,iJACgH,uBADhH,yFAGwF,uBAHxF,wIAKuI,uBALvI,a,iBCoDWC,EAnDE,WACf,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAgCN,mBAAS,IAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAA8BR,mBAAS,MAAvC,mBAAOS,EAAP,KAAgBC,EAAhB,KA+BA,OACE,gCACE,uBAAMC,SA/BY,SAACC,GAErB,GADAA,EAAMC,iBACkB,KAApBR,EAASS,QAAkC,KAAjBX,EAAMW,QAAiC,KAAhBb,EAAKa,QAAqC,KAApBP,EAASO,OAApF,CAIAJ,EAAW,MACX,IAKMK,EAAc,CAClBV,SAAUA,EACVF,MAAOA,EACPF,KAAMA,EACNM,SAAUA,GAEZS,IAAMC,KA3BU,uEA2BQF,EAXF,CACpBG,QAAS,CACP,YAAa,8CASmCC,MAAK,SAAAC,GACvDV,EAAW,8BACVW,OAAM,SAAAC,GACuB,MAA1BA,EAAMF,SAASG,QAA4C,MAA1BD,EAAMF,SAASG,OAClDb,EAAWY,EAAMF,SAASI,KAAKf,SAE/BC,EAAW,4EArBbA,EAAW,4BA4BX,UACE,0CADF,SAEQ,uBAAOe,KAAK,OAAOC,MAAOzB,EAAM0B,SAAU,SAAAf,GAAK,OAAIV,EAAQU,EAAMgB,OAAOF,UAFhF,IAE2F,uBAF3F,UAGS,uBAAOD,KAAK,OAAOC,MAAOvB,EAAOwB,SAAU,SAAAf,GAAK,OAAIR,EAASQ,EAAMgB,OAAOF,UAHnF,IAG8F,uBAH9F,aAIY,uBAAOD,KAAK,OAAOC,MAAOrB,EAAUsB,SAAU,SAAAf,GAAK,OAAIN,EAAYM,EAAMgB,OAAOF,UAJ5F,IAIuG,uBAJvG,aAKY,uBAAOD,KAAK,WAAWC,MAAOnB,EAAUoB,SAAU,SAAAf,GAAK,OAAIJ,EAAYI,EAAMgB,OAAOF,UALhG,IAK2G,uBACzG,uBAAOG,UAAU,MAAMJ,KAAK,SAASC,MAAM,wBAE5CjB,GAAW,mBAAGoB,UAAU,UAAb,SAAwBpB,Q,OCC3BqB,EA/CD,SAACC,GACb,MAAgC/B,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAgCN,mBAAS,IAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAAwCR,mBAAS,MAAjD,mBAAOgC,EAAP,KAAqBC,EAArB,KA+BA,OACE,gCACE,uBAAMtB,SA/BY,SAACC,GAErB,GADAA,EAAMC,iBACkB,KAApBR,EAASS,QAAqC,KAApBP,EAASO,OAAvC,CAIAmB,EAAgB,MAChB,IAKMlB,EAAc,CAClBV,SAAUA,EACVE,SAAUA,GAGZS,IAAMC,KAxBU,oEAwBQF,EAVF,CACpBG,QAAS,CACP,YAAa,8CAQmCC,MAAK,SAACC,GACxD5B,yBAAe4B,EAASI,KAAKtC,KAAMkC,EAASI,KAAK/B,OACjDsC,EAAMG,QAAQC,KAAK,gBAClBd,OAAM,SAACC,GACsB,MAA1BA,EAAMF,SAASG,QAA4C,MAA1BD,EAAMF,SAASG,OAClDU,EAAgBX,EAAMF,SAASI,KAAKf,SAEpCwB,EAAgB,oEArBlBA,EAAgB,qCA4BhB,UACE,uCADF,aAEY,uBAAOR,KAAK,OAAOC,MAAOrB,EAAUsB,SAAU,SAAAf,GAAK,OAAIN,EAAYM,EAAMgB,OAAOF,UAF5F,IAEuG,uBAFvG,aAGY,uBAAOD,KAAK,WAAWC,MAAOnB,EAAUoB,SAAU,SAAAf,GAAK,OAAIJ,EAAYI,EAAMgB,OAAOF,UAHhG,IAG2G,uBACzG,uBAAOG,UAAU,MAAMJ,KAAK,SAASC,MAAM,aAE5CM,GAAgB,mBAAGH,UAAU,UAAb,SAAwBG,Q,gCC/BhCI,EAZK,SAAC,GAAsC,IAAzBC,EAAwB,EAAnCC,UAAyBC,EAAU,iBACxD,OACE,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAAAT,GACN,OAAQxC,qBACN,cAAC,IAAD,CAAUkD,GAAI,CAAEC,SAAU,cADP,cAACL,EAAD,eAAeN,S,gBCO7BY,EAZM,SAAC,GAAsC,IAAzBN,EAAwB,EAAnCC,UAAyBC,EAAU,iBACzD,OACE,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAAAT,GACN,OAAOxC,qBAAa,cAAC8C,EAAD,eAAeN,IACjC,cAAC,IAAD,CAAUU,GAAI,CAAEC,SAAU,iB,0CCNrBE,E,8EAAf,mCAAAC,EAAA,6DAA0BC,EAA1B,EAA0BA,MAAOC,EAAjC,EAAiCA,aACzBC,EAAW,IAAIC,UACZC,OAAO,QAASJ,GACzBE,EAASE,OAAO,cAAeH,GAHjC,SAKuB/B,IAAMC,KAAK,UAAW+B,EAAU,CAAE9B,QAAS,CAAC,eAAgB,yBALnF,cAKQiC,EALR,yBAMSA,EAAO3B,MANhB,4C,sBAUA,IA+Ce4B,EA/CC,SAACrB,GACf,MAAwB/B,qBAAxB,mBAAOqD,EAAP,KAAaC,EAAb,KACA,EAAsCtD,mBAAS,IAA/C,mBAAO+C,EAAP,KAAoBQ,EAApB,KACA,EAA4BvD,mBAAS,IAArC,mBAAOwD,EAAP,KAAeC,EAAf,KAEMC,EAAM,uCAAG,WAAM9C,GAAN,eAAAiC,EAAA,6DACbjC,EAAMC,iBADO,SAEQ+B,EAAU,CAACE,MAAOO,EAAMN,gBAFhC,OAEPI,EAFO,OAGbM,EAAU,CAACN,EAAOL,OAAT,mBAAmBU,KAHf,2CAAH,sDAMNtE,EAAOD,oBACPgB,EAAgB,cAATf,GAAwBA,EAAOA,EAAKe,KAAO,GAYxD,OACE,sBAAK4B,UAAU,UAAf,UACE,uBAAMlB,SAAU+C,EAAhB,UACE,uBAAO/B,SARQ,SAAAf,GACnB,IAAMyC,EAAOzC,EAAMgB,OAAO+B,MAAM,GAClCL,EAAQD,IAM6B5B,KAAK,OAAOmC,OAAO,YAClD,uBAAOlC,MAAOqB,EAAapB,SAAU,SAAAkC,GAAC,OAAIN,EAAeM,EAAEjC,OAAOF,QAAQD,KAAK,SAC/E,wBAAQI,UAAU,MAAMJ,KAAK,SAA7B,uBAIA+B,EAAOM,KAAK,SAAAhB,GAAK,OACjB,8BACE,qBAAKiB,IAAKjB,KADFA,MAIZ,yCACO7C,EADP,0DACmE,uBACnE,uBAAO4B,UAAU,MAAMJ,KAAK,SAASC,MAAM,SAASsC,QA1BlC,WACpBpE,6BACAmC,EAAMG,QAAQC,KAAK,mBCuCR8B,MAxDf,WAEE,MAA4CjE,oBAAS,GAArD,mBAAOkE,EAAP,KAAwBC,EAAxB,KAEAC,qBAAU,WACR,IAAM3E,EAAQF,qBACd,GAAc,cAAVE,QAAmC4E,IAAV5E,GAAiC,OAAVA,GAAmBA,EAAvE,CAIA,IAKMsB,EAAc,CAClB7B,KAAMD,oBACNQ,MAAOA,GAGTuB,IAAMC,KAtBgB,qEAsBQF,EAVR,CACpBG,QAAS,CACP,YAAa,8CAQyCC,MAAK,SAAAC,GAC7D5B,yBAAe4B,EAASI,KAAKtC,KAAMkC,EAASI,KAAK/B,OACjD0E,GAAiB,MAChB9C,OAAM,WACPzB,6BACAuE,GAAiB,SAElB,IAEH,IAAM1E,EAAQF,qBACd,OAAI2E,GAAmBzE,EACd,qBAAKoC,UAAU,UAAf,8BAIP,qBAAKA,UAAU,MAAf,SACE,eAAC,IAAD,WACA,sBAAKA,UAAU,SAAf,UACE,cAAC,IAAD,CAASyC,OAAK,EAACC,gBAAgB,SAAS9B,GAAG,IAA3C,kBACA,cAAC,IAAD,CAAS8B,gBAAgB,SAAS9B,GAAG,YAArC,sBACA,cAAC,IAAD,CAAS8B,gBAAgB,SAAS9B,GAAG,SAArC,mBACA,cAAC,IAAD,CAAS8B,gBAAgB,SAAS9B,GAAG,WAArC,wBAEF,qBAAKZ,UAAU,UAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyC,OAAK,EAACE,KAAK,IAAIlC,UAAWxC,IACjC,cAAC,EAAD,CAAa0E,KAAK,YAAYlC,UAAWvC,IACzC,cAAC,EAAD,CAAayE,KAAK,SAASlC,UAAWR,IACtC,cAAC,EAAD,CAAc0C,KAAK,WAAWlC,UAAWc,eCxDnDqB,IAASjC,OACP,cAAC,IAAMkC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.451c1845.chunk.js","sourcesContent":["module.exports = {\n    getUser: function() {\n      const user = sessionStorage.getItem('user');\n      if (user === 'undefined' || !user) {\n        return null;\n      } else {\n        return JSON.parse(user);\n      }\n    },\n  \n    getToken: function() {\n      return sessionStorage.getItem('token');\n    },\n  \n    setUserSession: function(user, token) {\n      sessionStorage.setItem('user', JSON.stringify(user));\n      sessionStorage.setItem('token', token);\n    },\n  \n    resetUserSession: function() {\n      sessionStorage.removeItem('user');\n      sessionStorage.removeItem('token');\n    }\n  }","import React from 'react';\n\nconst Home = () => {\n  return (\n    <div>\n      Welcome! On this website you will be able to register to an AWS database. To do that go to the Register page. <br/>\n    \n      After you have registered you may proceed to the Login page to log into that account. <br/>\n\n      After you have logged in you will be redirected to your profile page where you can upload images and store them on an AWS S3 bucket. <br/>\n\n      Enjoy!\n    </div>\n  )\n}\n\nexport default Home;","import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst registerUrl = 'https://qumju8n29l.execute-api.us-east-2.amazonaws.com/prod/register';\n\nconst Register = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState(null);\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if (username.trim() === '' || email.trim() === '' || name.trim() === '' || password.trim() === '') {\n      setMessage('All fields are required');\n      return;\n    }\n    setMessage(null);\n    const requestConfig = {\n      headers: {\n        'x-api-key': 'neKKXeqoAs7i724un3NIOaZIm08rP8v37uT8lb4b'\n      }\n    }\n    const requestBody = {\n      username: username,\n      email: email,\n      name: name,\n      password: password\n    }\n    axios.post(registerUrl, requestBody, requestConfig).then(response => {\n      setMessage('Successfully Registered');\n    }).catch(error => {\n      if (error.response.status === 401 || error.response.status === 403) {\n        setMessage(error.response.data.message);\n      } else {\n        setMessage('The server is down. Please try again after some time has passed.');\n      }\n    })\n  }\n\n  return (\n    <div>\n      <form onSubmit={submitHandler}>\n        <h5>Register</h5>\n        name: <input type=\"text\" value={name} onChange={event => setName(event.target.value)} /> <br/>\n        email: <input type=\"text\" value={email} onChange={event => setEmail(event.target.value)} /> <br/>\n        username: <input type=\"text\" value={username} onChange={event => setUsername(event.target.value)} /> <br/>\n        password: <input type=\"password\" value={password} onChange={event => setPassword(event.target.value)} /> <br/>\n        <input className=\"btn\" type=\"submit\" value=\"Register Account\" />\n      </form>\n      {message && <p className=\"message\">{message}</p>}\n    </div>\n  )\n}\n\nexport default Register;","import React, {useState} from 'react';\nimport axios from 'axios';\nimport { setUserSession } from './service/AuthService'\nconst loginAPIUrl = 'https://qumju8n29l.execute-api.us-east-2.amazonaws.com/prod/login';\n\nconst Login = (props) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if (username.trim() === '' || password.trim() === '') {\n      setErrorMessage('Username or password is missing.');\n      return;\n    }\n    setErrorMessage(null);\n    const requestConfig = {\n      headers: {\n        'x-api-key': 'neKKXeqoAs7i724un3NIOaZIm08rP8v37uT8lb4b'\n      }\n    }\n    const requestBody = {\n      username: username,\n      password: password\n    }\n\n    axios.post(loginAPIUrl, requestBody, requestConfig).then((response) => {\n      setUserSession(response.data.user, response.data.token);\n      props.history.push('./profile');\n    }).catch((error) => {\n      if (error.response.status === 401 || error.response.status === 403) {\n        setErrorMessage(error.response.data.message);\n      } else {\n        setErrorMessage('The server is offline. Please try again at a later time.');\n      }\n    })\n  }\n\n  return (\n    <div>\n      <form onSubmit={submitHandler}>\n        <h5>Login</h5>\n        username: <input type=\"text\" value={username} onChange={event => setUsername(event.target.value)} /> <br/>\n        password: <input type=\"password\" value={password} onChange={event => setPassword(event.target.value)} /> <br/>\n        <input className=\"btn\" type=\"submit\" value=\"Login\" />\n      </form>\n      {errorMessage && <p className=\"message\">{errorMessage}</p>}\n    </div>\n  )\n}\n\nexport default Login;","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { getToken } from '../service/AuthService';\n\nconst PublicRoute = ({ component: Component, ...rest}) => {\n  return (\n    <Route \n      {...rest}\n      render={props => {\n        return !getToken() ? <Component {...props} />\n        : <Redirect to={{ pathname: '/profile'}} />\n      }}\n    />\n  )\n}\n\nexport default PublicRoute","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { getToken } from '../service/AuthService';\n\nconst PrivateRoute = ({ component: Component, ...rest}) => {\n  return (\n    <Route \n      {...rest}\n      render={props => {\n        return getToken() ? <Component {...props} />\n        : <Redirect to={{ pathname: '/login'}} />\n      }}\n    />\n  )\n}\n\nexport default PrivateRoute","import { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { getUser, resetUserSession } from './service/AuthService';\r\n\r\nasync function postImage({image, description}) {\r\n  const formData = new FormData();\r\n  formData.append(\"image\", image)\r\n  formData.append(\"description\", description)\r\n\r\n  const result = await axios.post('/images', formData, { headers: {'Content-Type': 'multipart/form-data'}})\r\n  return result.data\r\n}\r\n\r\n\r\nconst Profile = (props) => {\r\n  const [file, setFile] = useState()\r\n  const [description, setDescription] = useState(\"\")\r\n  const [images, setImages] = useState([])\r\n\r\n  const submit = async event => {\r\n    event.preventDefault()\r\n    const result = await postImage({image: file, description})\r\n    setImages([result.image, ...images])\r\n  }\r\n\r\n  const user = getUser();\r\n  const name = user !== 'undefined' && user ? user.name : '';\r\n\r\n  const logoutHandler = () => {\r\n    resetUserSession();\r\n    props.history.push('login');\r\n  }\r\n\r\n  const fileSelected = event => {\r\n    const file = event.target.files[0]\r\n\t\tsetFile(file)\r\n\t}\r\n\r\n  return (\r\n    <div className=\"Profile\">\r\n      <form onSubmit={submit}>\r\n        <input onChange={fileSelected} type=\"file\" accept=\"image/*\"></input>\r\n        <input value={description} onChange={e => setDescription(e.target.value)} type=\"text\"></input>\r\n        <button className=\"btn\" type=\"submit\">Submit</button>\r\n\r\n      </form>\r\n\r\n      { images.map( image => (\r\n        <div key={image}>\r\n          <img src={image}></img>\r\n        </div>\r\n      ))}\r\n      <div>\r\n      Hello {name}! You are logged in and can start sharing your images! <br/>\r\n      <input className=\"btn\" type=\"button\" value=\"Logout\" onClick={logoutHandler}/>\r\n    </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;","import { BrowserRouter, NavLink, Route, Switch} from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Register from \"./Register\";\nimport Login from \"./Login\";\nimport PublicRoute from \"./routes/PublicRoute\";\nimport PrivateRoute from \"./routes/PrivateRoute\";\nimport Profile from \"./Profile\";\nimport React, { useState, useEffect } from \"react\";\nimport { getUser, getToken, setUserSession, resetUserSession } from \"./service/AuthService\";\nimport axios from \"axios\";\n\nconst verifyTokenAPIURL = 'https://qumju8n29l.execute-api.us-east-2.amazonaws.com/prod/verify';\n\nfunction App() {\n\n  const [isAuthenicating, setAuthenicating] = useState(true);\n\n  useEffect(() => {\n    const token = getToken();\n    if (token === 'undefined' || token === undefined || token === null || !token) {\n      return;\n    }\n\n    const requestConfig = {\n      headers: {\n        'x-api-key': 'neKKXeqoAs7i724un3NIOaZIm08rP8v37uT8lb4b'\n      }\n    }\n    const requestBody = {\n      user: getUser(),\n      token: token\n    }\n\n    axios.post(verifyTokenAPIURL, requestBody, requestConfig).then(response => {\n      setUserSession(response.data.user, response.data.token);\n      setAuthenicating(false);\n    }).catch(() => {\n      resetUserSession();\n      setAuthenicating(false);\n    })\n  }, []);\n\n  const token = getToken();\n  if (isAuthenicating && token) {\n    return <div className=\"content\">Authenicating...</div>\n  }\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n      <div className=\"header\">\n        <NavLink exact activeClassName=\"active\" to=\"/\">Home</NavLink>\n        <NavLink activeClassName=\"active\" to=\"/register\">Register</NavLink>\n        <NavLink activeClassName=\"active\" to=\"/login\">Login</NavLink>\n        <NavLink activeClassName=\"active\" to=\"/profile\">Profile</NavLink>\n      </div>\n      <div className=\"content\">\n        <Switch>\n          <Route exact path=\"/\" component={Home}/>\n          <PublicRoute path=\"/register\" component={Register}/>\n          <PublicRoute path=\"/login\" component={Login}/>\n          <PrivateRoute path=\"/profile\" component={Profile}/>\n        </Switch>\n      </div>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}